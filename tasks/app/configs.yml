- name: Generate restic repository password
  template:
    src: 'templates/app/config/backup/restic-repository-password.j2'
    dest: '{{ app_root }}/config/backup/restic-repository-password'
    mode: 0600
  when: backup_disabled is undefined and backup_disabled != true

- name: Copy private key for backup user
  copy:
    src: '{{ playbook_dir }}/{{ backup_user_id_rsa_path }}'
    dest: '{{ app_root }}/config/backup/id_rsa'
    mode: 0600
  when: backup_disabled is undefined and backup_disabled != true

- name: Generate ssh_config for backup
  template:
    src: 'templates/app/config/backup/ssh_config.j2'
    dest: '{{ app_root }}/config/backup/ssh_config'
    mode: 0644
  when: backup_disabled is undefined and backup_disabled != true

- name: Generate dywa-app config
  template:
    src: 'templates/app/config/dywa-app/{{ item.src }}'
    dest: '{{ app_root }}/config/dywa-app/{{ item.dest }}'
    mode: 0644
  with_items:
    - src: standalone.xml.j2
      dest: standalone.xml
    - src: standalone.conf.j2
      dest: standalone.conf

- name: Generate nginx webapp config
  template:
    src: 'templates/app/config/webapp/{{ item.src }}'
    dest: '{{ app_root }}/config/webapp/{{ item.dest }}'
    mode: 0644
  with_items:
    - src: nginx.conf.j2
      dest: nginx.conf

- name: Create nginx config directory
  become: true
  file:
    path: /etc/nginx/conf.d
    state: directory

- name: Generate nginx proxy config
  become: true
  template:
    src: 'templates/app/config/nginx/{{ item.src }}'
    dest: '/etc/nginx/{{ item.dest }}'
    mode: 0644
  with_items:
    - src: nginx.conf.j2
      dest: nginx.conf
  notify:
    - restart nginx

- name: Generate nginx proxy conf.d files
  become: true
  template:
    src: 'templates/app/config/nginx/conf.d/{{ item.src }}'
    dest: '/etc/nginx/conf.d/{{ item.dest }}'
    mode: 0644
  with_items:
    - src: ssl.conf.j2
      dest: ssl.conf
    - src: webapp.conf.j2
      dest: webapp.conf
    - src: dywa-app.conf.j2
      dest: dywa-app.conf
  notify:
    - restart nginx

- name: Install packages for generating htpasswd files
  become: true
  apt:
    name: ['python3-passlib']
    state: present
    update_cache: yes

- name: Generate nginx htpasswd-dywa file
  become: true
  htpasswd:
    dest: '/etc/nginx/htpasswd-dywa'
    name: '{{ dywa_http_auth_username }}'
    password: '{{ dywa_http_auth_password }}'
    mode: 0644
  notify:
    - restart nginx

- name: Generate nginx htpasswd-mailcatcher file
  become: true
  htpasswd:
    dest: '/etc/nginx/htpasswd-mailcatcher'
    name: '{{ mailcatcher_http_auth_username }}'
    password: '{{ mailcatcher_http_auth_password }}'
    mode: 0644
  when: deployment_tier != 'production'
  notify:
    - restart nginx

- name: Generate maven settings
  template:
    src: templates/app/maven/settings.xml.j2
    dest: '{{ app_root }}/maven/settings.xml'
    mode: 0644
