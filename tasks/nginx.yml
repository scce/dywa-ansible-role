# install
- name: install nginx
  apt:
    name: nginx
    update_cache: yes
    state: present

- name: install letsencrypt
  apt:
    name: letsencrypt
    state: present

# directories
- name: create letsencrypt directory
  file:
    path: /var/www/letsencrypt
    state: directory

- name: create maintenance folder
  file:
    group: '{{deployment_user}}'
    mode: 0755
    owner: '{{deployment_user}}'
    path: /var/www/html/maintenance
    state: directory

- name: create teaser folder
  file:
    group: '{{deployment_user}}'
    mode: 0755
    owner: '{{deployment_user}}'
    path: /var/www/html/teaser
    state: directory

# install basic configs
- name: remove default nginx config
  file: name=/etc/nginx/sites-enabled/default state=absent

- name: install nginx config
  template:
    src: ./files/nginx/nginx.conf.j2
    dest: /etc/nginx/nginx.conf

- name: install nginx basic_auth
  template:
    src: ./files/nginx/basic_auth.j2
    dest: /etc/nginx/basic_auth

- name: install nginx default site
  template:
    src: ./files/nginx/start.j2
    dest: /etc/nginx/sites-available/start

- name: activate nginx default site
  file:
    src: /etc/nginx/sites-available/start
    dest: /etc/nginx/sites-enabled/start
    state: link

# create letsencrypt certificate
- name: reload nginx to activate letsencrypt site
  become: true
  service: name=nginx state=restarted

- name: Define letsencrypt command
  set_fact:
    letsencrpyt_command: 'letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}'

- name: Create letsencrypt certificate
  shell: '{{letsencrpyt_command}}'
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}
  notify: 'restart nginx'

- name: Add letsencrypt cronjob for cert renewal
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: '{{letsencrpyt_command}}'

- name: generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem
  notify: 'restart nginx'

# install nginx sites
- name: install nginx wildfly site
  template:
    src: ./files/nginx/wildfly.j2
    dest: /etc/nginx/sites-available/wildfly
  notify: 'restart nginx'

- name: install nginx wildfly-websockets site
  template:
    src: ./files/nginx/wildfly-websockets.j2
    dest: /etc/nginx/sites-available/wildfly-websockets
  notify: 'restart nginx'

- name: install nginx teaser site
  template:
    src: ./files/nginx/teaser.j2
    dest: /etc/nginx/sites-available/teaser
  notify: 'restart nginx'

- name: install nginx maintenance site
  template:
    src: ./files/nginx/maintenance.j2
    dest: /etc/nginx/sites-available/maintenance
  notify: 'restart nginx'

# activate nginx sites
- include_tasks: 'nginx/{{ mode }}.yml'
