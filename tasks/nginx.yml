- name: install nginx
  apt:
    name: nginx
    update_cache: yes
    state: present

- name: install letsencrypt
  apt:
    name: letsencrypt
    state: present

- name: create letsencrypt directory
  file: name=/var/www/letsencrypt state=directory

- name: remove default nginx config
  file: name=/etc/nginx/sites-enabled/default state=absent

- name: install nginx config
  template:
    src: ./files/nginx/nginx.conf.j2
    dest: /etc/nginx/nginx.conf

- name: install nginx basic_auth
  template:
    src: ./files/nginx/basic_auth.j2
    dest: /etc/nginx/basic_auth

- name: install nginx default site
  template:
    src: ./files/nginx/start.j2
    dest: /etc/nginx/sites-enabled/start

- name: reload nginx to activate letsencrypt site
  become: true
  service: name=nginx state=restarted

- name: create letsencrypt certificate
  shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}
  notify: 'restart nginx'

- name: generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

- name: install nginx wildfly site
  template:
    src: ./files/nginx/wildfly.j2
    dest: /etc/nginx/sites-enabled/wildfly
  notify: 'restart nginx'

#- name: Add letsencrypt cronjob for cert renewal
#  cron:
#    name: letsencrypt_renewal
#    special_time: weekly
#    job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload